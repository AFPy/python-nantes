<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>Python-Nantes</title><link>http://nantes.afpy.org/</link><description></description><lastBuildDate>Sun, 12 Apr 2015 00:00:00 +0200</lastBuildDate><item><title>Le meetup du 28 avril sera un barcamp</title><link>http://nantes.afpy.org/le-meetup-du-28-avril-sera-un-barcamp.html</link><description>&lt;p&gt;La prochaine rencontre Python Nantes sera au format BarCamp et se déroulera le mardi 28 avril, à la Cantine de Nantes.&lt;/p&gt;
&lt;p&gt;L'idée est simplement de se retrouver et de décider sur place des sujets de discussions qui vous intéressent, de les aborder ensemble en différents groupes, puis de mettre en commun ce qui s'est dit pendant les ateliers.&lt;/p&gt;
&lt;p&gt;Comme toujours ce meetup est ouvert à tous les amoureux ou curieux du langage Python, nous apprécions particulièrement la diversité des profils qui joignent à nous !&lt;/p&gt;
&lt;p&gt;Ceux qui ont envie pourront prolonger la soirée autour d'un verre en centre ville de Nantes.&lt;/p&gt;
&lt;p&gt;Si vous avez des questions ou des remarques concernant nos meetups, rejoignez-nous sur le chan IRC de l'AFPy Nantes ou inscrivez vous sur la liste de diffusion . Vous pouvez aussi nous suivre sur Twitter via notre compte &amp;#64;PythonNantes :)&lt;/p&gt;
&lt;p&gt;À bientôt !&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Florent Lebreton</dc:creator><pubDate>Sun, 12 Apr 2015 00:00:00 +0200</pubDate><guid isPermaLink="false">tag:nantes.afpy.org,2015-04-12:le-meetup-du-28-avril-sera-un-barcamp.html</guid><category>python</category><category>nantes</category></item><item><title>Un meetup pour fêter le printemps !</title><link>http://nantes.afpy.org/un-meetup-pour-feter-le-printemps.html</link><description>&lt;p&gt;Lors de notre prochain meetup, le 24 mars à 19h à la Cantine, deux sujets très pythoniques vous seront proposés par nos orateurs :&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;strong&gt;Présentation d'asyncio&lt;/strong&gt; (par Gaël) : La bibliothèque Python 3 asyncio fournit une infrastructure pour écrire du code concurrent mono-threadé en utilisant les coroutines, multiplexer des entrées-sorties à travers des sockets ou d'autres ressources, faire tourner des clients et serveurs réseaux, ...&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Tests unitaires en python&lt;/strong&gt; (par Thomas) : Python nous offre par défaut des outils terriblement pratiques pour la mise en place de tests automatisés. Nous aborderons la question de l'utilité et de la pertinence de ces tests unitaires, la mise en oeuvre basique du module unittest. Nous expliquerons ensuite le sujet des fixtures, puis nous irons un peu plus loin, avec le concept de Factory. Enfin, nous présenterons certains modules de tests alternatifs.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Nous espérons vous compter aussi nombreux que d'habitude à ce meetup ainsi qu'au verre qui s'en suivra.&lt;/p&gt;
&lt;p&gt;Rejoignez-nous sur le &lt;a class="reference external" href="http://webchat.freenode.net/?channels=afpy-nantes"&gt;chan IRC de l'AFPy Nantes&lt;/a&gt; ou inscrivez vous sur la &lt;a class="reference external" href="http://lists.afpy.org/listinfo/nantes"&gt;liste de diffusion&lt;/a&gt; . :)&lt;/p&gt;
&lt;p&gt;À bientôt !&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Florent Lebreton</dc:creator><pubDate>Thu, 05 Mar 2015 00:00:00 +0100</pubDate><guid isPermaLink="false">tag:nantes.afpy.org,2015-03-05:un-meetup-pour-feter-le-printemps.html</guid><category>python</category><category>ayncio</category><category>unittest</category><category>nantes</category></item><item><title>Un petit barcamp ?!</title><link>http://nantes.afpy.org/un-petit-barcamp.html</link><description>&lt;p&gt;Après les conférences très appréciées du mois de janvier, qui nous ont permis de bien commencer l'année 2015, on continue avec un &lt;a class="reference external" href="http://fr.wikipedia.org/wiki/BarCamp"&gt;BarCamp&lt;/a&gt; mardi 24 février, encore et toujours à la Cantine !&lt;/p&gt;
&lt;p&gt;L'idée sera donc de proposer puis de voter pour quelques thèmes qui deviendront des ateliers / tables rondes, auxquelles tout participant peut s'inscrire, peu importe son niveau de connaissance du sujet. Les différentes discussions pourront donner lieu à des petits compte-rendus afin que toute la communauté profite de ce qui s'est dit ou fait.&lt;/p&gt;
&lt;p&gt;Comme d'habitude, ceux qui le souhaitent pourront prolonger l'évènement autour d'un verre en centre ville de Nantes.&lt;/p&gt;
&lt;p&gt;Si vous avez des questions ou des remarques concernant nos meetups, rejoignez-nous sur le &lt;a class="reference external" href="http://webchat.freenode.net/?channels=afpy-nantes"&gt;chan IRC de l'AFPy Nantes&lt;/a&gt; ou inscrivez vous sur la &lt;a class="reference external" href="http://lists.afpy.org/listinfo/nantes"&gt;liste de diffusion&lt;/a&gt; . Vous pouvez aussi nous suivre sur Twitter via notre compte &lt;a class="reference external" href="https://twitter.com/PythonNantes"&gt;&amp;#64;PythonNantes&lt;/a&gt; :)&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;N'hésitez pas à vous inscrire ici pour que nous ayons un aperçu du nombre de participants&lt;/strong&gt; : &lt;a class="reference external" href="http://www.meetup.com/Nantes-Python-Meetup/events/220430364/"&gt;inscription au meetup&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;À bientôt !&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Florent Lebreton</dc:creator><pubDate>Tue, 10 Feb 2015 00:00:00 +0100</pubDate><guid isPermaLink="false">tag:nantes.afpy.org,2015-02-10:un-petit-barcamp.html</guid><category>python</category></item><item><title>Compte-rendu des conférences : Pyramid, Générateurs et co-routines</title><link>http://nantes.afpy.org/compte-rendu-des-conferences-pyramid-generateurs-et-co-routines.html</link><description>&lt;p&gt;Pour ce premier meetup de janvier, deux sujets ont été présentés devant une quarantaine de personnes visiblement intéressées et attentives. Vous trouverez dans cet article un résumé de ce qui a été proposé, ainsi que les liens vers les présentations.&lt;/p&gt;
&lt;div class="section" id="pyramid"&gt;
&lt;h2&gt;Pyramid&lt;/h2&gt;
&lt;p&gt;Intervenant&amp;nbsp;: Gaël&lt;/p&gt;
&lt;p&gt;Pyramid est un framework web développé en Python. On peut le classer entre Bottle (plus minimaliste) et Django (plus gros et plus monolithique).
Il est nativement WSGI, facilement extensible et laisse beaucoup de souplesse dans les choix techniques et la conception.&lt;/p&gt;
&lt;p&gt;Vous verrez dans les slides qu'un classique &amp;quot;Hello World&amp;quot;, servi en HTTP, est très simple à réaliser.&lt;/p&gt;
&lt;p&gt;Le premier composant à appréhender est le &lt;a class="reference external" href="http://docs.pylonsproject.org/docs/pyramid/en/latest/api/config.html"&gt;configurateur&lt;/a&gt;, qui permet de configurer une application Pyramid (et notamment de gérer les routes).&lt;/p&gt;
&lt;p&gt;Le &lt;em&gt;routeur&lt;/em&gt; a la particularité de pouvoir fonctionner de &lt;a class="reference external" href="http://pyramid-cookbook.readthedocs.org/en/latest/routing/"&gt;deux manière différentes&lt;/a&gt; :&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;par mapping des URLs sur des vues&lt;/li&gt;
&lt;li&gt;en mode &lt;em&gt;traversal&lt;/em&gt; (les différents fragments de l'URL permettent traverser des classes).&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Le routeur permet aussi classiquement de faire de la résolution d'URL, ce qui évite à avoir à répéter des URLs dans les templates par exemple.&lt;/p&gt;
&lt;p&gt;Un autre concept assez intéressant du framework est l'utilisation des exceptions. Il est notamment possible de lever des exceptions HTTP ce qui permet de gérer les erreurs sous forme de codes du protocole HTTP (500, 403).&lt;/p&gt;
&lt;p&gt;Le concept de &lt;em&gt;factory&lt;/em&gt; permet de récupérer/travailler sur un objet avant qu'une vue ne soit invoquée, ce qui rend le code de la vue plus simple. Une &lt;em&gt;factory&lt;/em&gt; peut être factorisée et utilisée dans plusieurs vues.&lt;/p&gt;
&lt;p&gt;Le rendu d'une vue se fait via par l'intermédiaire d'une &lt;em&gt;renderer&lt;/em&gt; et une vue peut être associée à plusieurs renderer (par exemple un rendu json et un rendu HTML via une template). On pourrait aussi avoir plusieurs renderers utilisant des moteurs de templates différents (Chameleon, Jinja, Mako, ...). Il est aussi possible de créer son propre renderer (par exemple pour renvoyer un fichier csv, un pdf, ...).&lt;/p&gt;
&lt;p&gt;Le concept de &lt;em&gt;tween&lt;/em&gt; permet d'intercepter une requête, puis la réponse pour analyser ou modifier l'une ou l'autre. Un cas pratique classique est l'utilisation d'une barre de debuggage permettant d'analyser le comportement de l'application.&lt;/p&gt;
&lt;p&gt;Un système d'évènements permet d'associer une fonction à un évènement. Par exemple : &lt;tt class="docutils literal"&gt;BeforeRender&lt;/tt&gt; est déclenché avant le rendu d'une template et laisse la possibilité d'injecter des données dans le context passé à la template.&lt;/p&gt;
&lt;p&gt;Par ailleurs, Pyramid est modulaire et peut être facilement étendu via la fonction magique &lt;tt class="docutils literal"&gt;includeme&lt;/tt&gt;. Il est aussi possible d'étendre l'objet &lt;tt class="docutils literal"&gt;request&lt;/tt&gt; pour lui ajouter des méthodes par exemple, ce qui peut s'avérer pratique dans certains cas.&lt;/p&gt;
&lt;p&gt;Beaucoup de modules supplémentaires sont fournis nativement :&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Gestion de l'authentification et d'autorisations&lt;/li&gt;
&lt;li&gt;Gestion et service des fichiers statiques&lt;/li&gt;
&lt;li&gt;Gestion des sessoins&lt;/li&gt;
&lt;li&gt;Gestion du cache HTTP&lt;/li&gt;
&lt;li&gt;Gestion de prédicats de vue&lt;/li&gt;
&lt;li&gt;Gestion de trasaction étendue (par exemple pour éviter un envoi de mail si une requête SQL a précédemment échoué)&lt;/li&gt;
&lt;li&gt;...&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;L'écosystème de Pyramid est assez riche et varié ; plus de 250 packages sont indiqués comme étant compatibles Pyramid sur pypi.&lt;/p&gt;
&lt;p&gt;Il existe entre autres des CMS basés sur Pyramid : notamment &lt;a class="reference external" href="http://substanced.net/"&gt;substanced&lt;/a&gt; (basé sur la ZODB) et &lt;a class="reference external" href="http://kotti.pylonsproject.org/"&gt;kotti&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Les slides de la présentation sont disponibles ici : &lt;a class="reference external" href="http://nantes.afpy.org/presentations/pyramid"&gt;Présentation de Pyramid&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="generateurs-et-coroutines"&gt;
&lt;h2&gt;Générateurs et coroutines&lt;/h2&gt;
&lt;p&gt;Intervenant&amp;nbsp;: Hugo&lt;/p&gt;
&lt;div class="section" id="les-iterateurs-iterables"&gt;
&lt;h3&gt;Les itérateurs / iterables&lt;/h3&gt;
&lt;p&gt;Le concept d'itérable est simplement une généralisation du concept de séquence ou de liste. Un itérable est défini par le fait qu'il est possible d'itérer dessus, par exemple dans une boucle for ...
La syntaxe [] permet de définir ce qu'on appelle une liste &lt;em&gt;en compréhension&lt;/em&gt;. L'iterable est un concept pratique mais il a le défaut de stocker tous ses éléménts en mémoire.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="les-generateurs"&gt;
&lt;h3&gt;Les générateurs&lt;/h3&gt;
&lt;p&gt;Un générateur est un itérable qui a la particularité de générer les résultats à la volée. Syntaxiquement une &lt;em&gt;expression génératrice&lt;/em&gt; peut s'écrire de la même manière qu'un itérable classique, en remplaçant les [] par des ().&lt;/p&gt;
&lt;p&gt;Dans un générateur, on utilise le mot clé &lt;tt class="docutils literal"&gt;yield&lt;/tt&gt; à la place de &lt;tt class="docutils literal"&gt;return&lt;/tt&gt;. La première différence est que l'appel de la fonction renverra non pas un résultat mais un générateur, sans que la fonction soit exécutée. La fonction est exécutée à partir du moment où on itère sur le générateur. Le premier appel à la méthode &lt;tt class="docutils literal"&gt;next&lt;/tt&gt; permet d'exécuter la fonction jusq'au premier &lt;tt class="docutils literal"&gt;yield&lt;/tt&gt;. À l'exécution du &lt;tt class="docutils literal"&gt;yield&lt;/tt&gt;, le générateur rend la main à la fonction appelante et s'arrête (mais l'état de son exécution est enregistré). Dans la fonction appelante, chaque appel de la méthode &lt;tt class="docutils literal"&gt;next&lt;/tt&gt; relance donc une exécution du générateur, de l'état où il s'était arrêté jusqu'au &lt;tt class="docutils literal"&gt;yield&lt;/tt&gt; suivant.&lt;/p&gt;
&lt;p&gt;Plusieurs intérêts notables :&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;l'évaluation paresseuse limite l'allocation mémoire&lt;/li&gt;
&lt;li&gt;elle permet aussi de travailler avec une vision &amp;quot;flux de données&amp;quot; (en chainant plusieurs générateurs comme on chaine des commandes unix par exemple &lt;tt class="docutils literal"&gt;cat foo.txt | grep bar&lt;/tt&gt;)&lt;/li&gt;
&lt;li&gt;possibilité de faire du pseudo-asynchrone de manière synchrone&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="les-co-routines"&gt;
&lt;h3&gt;Les co-routines&lt;/h3&gt;
&lt;p&gt;Une co-routine est à peu prêt la même chose qu'un générateur à la différence près qu'elle dispose d'une méthode supplémentaire &lt;tt class="docutils literal"&gt;send&lt;/tt&gt; qui permet à la fonction appelante d'envoyer des données à la co-routine. Cela permet d'influer sur son comportement depuis la fonction appelante.&lt;/p&gt;
&lt;p&gt;La vision est inversée : dans une chaine de co-routines, la fonction appelante pousse les données vers la fonction appelée. Il est aussi possible de diffuser des données à plusieurs co-routines.&lt;/p&gt;
&lt;p&gt;L'application principale des co-routines est de faire de la programmation pseudo-asynchrone tout en gardant une lisibilité proche du code synchrone classique. L'autre avantage est que la co-routine est &amp;quot;maitre&amp;quot; de son état et sait à quel endroit et dans quel état elle peut être interrompue et reprendre son exécution.&lt;/p&gt;
&lt;p&gt;Le mot clé &lt;tt class="docutils literal"&gt;yield from&lt;/tt&gt;, arrivé en Python 3, permet de faire de la &lt;em&gt;délégation de générateurs&lt;/em&gt;, c'est à dire de créer une sorte de tunnel bidirectionnel entre un générateur et un sous-générateur.&lt;/p&gt;
&lt;p&gt;Les slides de la présentation sont disponibles ici : &lt;a class="reference external" href="https://github.com/mhugo/pres_coroutines"&gt;Générateurs et co-routines&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Merci à tous pour votre présence, on se retrouve au prochain barcamp le 24 mars !&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Florent Lebreton</dc:creator><pubDate>Tue, 27 Jan 2015 00:00:00 +0100</pubDate><guid isPermaLink="false">tag:nantes.afpy.org,2015-01-27:compte-rendu-des-conferences-pyramid-generateurs-et-co-routines.html</guid><category>pyramid</category><category>générateur</category><category>co-routine</category></item><item><title>Premier meetup Python 2015 !</title><link>http://nantes.afpy.org/premier-meetup-python-2015.html</link><description>&lt;p&gt;Pythonistes nantais, attaquons l'année 2015 comme il se doit avec un meetup dès la fin de ce mois de janvier, le 27, toujours à partir de 19h à la Cantine.&lt;/p&gt;
&lt;p&gt;Pour partir du bon pied, deux présentations vous seront proposées :&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;strong&gt;Pyramid&lt;/strong&gt; : Pyramid est un framework python léger et pleinement compatible WSGI. Nous présenterons les principaux concept du framework. Création de projet, dispatching vs traversing, rendu de template, sécurité, événements, intégration d'application WSGI tierce.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Générateurs &amp;amp; co-routines&lt;/strong&gt; : Durant cette présentation il sera question du langage Python en tant que tel et en particulier de deux concepts voisins : les générateurs, qui permettent une expression &amp;quot;paresseuse&amp;quot; et les co-routines, qui introduisent un style de programmation relativement méconnu. Après une présentation des aspects syntaxiques, nous pourrons échanger sur les cas d'utilisation possibles de ces concepts.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Nous espérons donc vous compter nombreux parmi nous le 27 janvier à la Cantine, ainsi pour le verre qui s'en suivra probablement :).&lt;/p&gt;
&lt;p&gt;Si vous avez des questions ou des remarques concernant nos meetups, rejoignez-nous sur le &lt;a class="reference external" href="http://webchat.freenode.net/?channels=afpy-nantes"&gt;chan IRC de l'AFPy Nantes&lt;/a&gt; ou inscrivez vous sur la &lt;a class="reference external" href="http://lists.afpy.org/listinfo/nantes"&gt;liste de diffusion&lt;/a&gt; . :)&lt;/p&gt;
&lt;p&gt;À bientôt !&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Florent Lebreton</dc:creator><pubDate>Wed, 07 Jan 2015 00:00:00 +0100</pubDate><guid isPermaLink="false">tag:nantes.afpy.org,2015-01-07:premier-meetup-python-2015.html</guid><category>python</category><category>pyramid</category><category>nantes</category></item><item><title>Meetup / Conférences Python le 18 novembre</title><link>http://nantes.afpy.org/meetup-conferences-python-le-18-novembre.html</link><description>&lt;p&gt;Pour éviter de faire de l'ombre à la PyConFr (&amp;lt;/joke&amp;gt;), nous avons décalé la prochaine rencontre des pythonistes nantais au mois de novembre.&lt;/p&gt;
&lt;p&gt;Le meetup est donc prévu le 18 novembre, toujours à La Cantine de Nantes, à partir de 19h.&lt;/p&gt;
&lt;p&gt;Au programme cette fois-ci, deux conférences:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;strong&gt;IPython &amp;amp; dataviz&lt;/strong&gt; : Quand on pense cartographie, certains pensent logiciels bureautiques, d'autres en ligne, ici nous montrerons qu'il existe d'autres voies en particulier pour l'analyse de données. Ainsi, nous vous proposons de voir l'utilisation de IPython pour découvrir des données et les cartographier. Nous pourrons ainsi introduire quelques bibliothèques pour l'analyse statistique, la manipulation de données et les représentations cartographiques.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Pelican&lt;/strong&gt; : À contre-courant des frameworks web «&amp;nbsp;full-stack&amp;nbsp;», complexes et lourds, se trouve Pelican, et les générateurs de sites statiques. Pourquoi opter pour une approche si minimaliste&amp;nbsp;? Que peut-on en tirer&amp;nbsp;? Découvrez l’utilisation de Pelican, ses forces, ses limites, et comment les contourner.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Comme d'habitude, nous espérons vous compter parmi nous pour ces conférences, ainsi pour le verre qui s'en suivra probablement :).&lt;/p&gt;
&lt;p&gt;Pour vous tenir informé du contenu exact de l'évènement, ou pour faire part de vos suggestions, n'hésitez pas à vous inscrire à la &lt;a class="reference external" href="http://lists.afpy.org/listinfo/nantes"&gt;liste de diffusion&lt;/a&gt; des pythonistes nantais.&lt;/p&gt;
&lt;p&gt;Vous pouvez aussi nous rejoindre sur le &lt;a class="reference external" href="http://webchat.freenode.net/?channels=afpy-nantes"&gt;chan IRC de l'AFPy Nantes&lt;/a&gt;. :)&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Florent Lebreton</dc:creator><pubDate>Tue, 28 Oct 2014 00:00:00 +0100</pubDate><guid isPermaLink="false">tag:nantes.afpy.org,2014-10-28:meetup-conferences-python-le-18-novembre.html</guid><category>python</category><category>ipython</category><category>pelican</category><category>nantes</category></item><item><title>Fin des vacances, Nantes se replonge dans Python :)</title><link>http://nantes.afpy.org/fin-des-vacances-nantes-se-replonge-dans-python.html</link><description>&lt;p&gt;Tout le monde est bien reposé, il est de temps de se replonger dans le bain. Rien de tel qu'un meetup de rentrée !&lt;/p&gt;
&lt;p&gt;Deux sujets de présentations vous seront proposés:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;« Introduction à Django, le framework de développement web pour les perfectionnistes sous pression. »&lt;/li&gt;
&lt;li&gt;« Écrire du code python selon les règles de l’art. »&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;La suite du meetup et de la soirée nous laissera le temps de discuter librement et d'aller boire un verre pour profiter de cette fin de période estivale.&lt;/p&gt;
&lt;p&gt;Que vous soyez experts Python, débutants ou simplement curieux de découvrir ce langage, nous serons heureux de vous compter parmis nous !&lt;/p&gt;
&lt;p&gt;L'évènement est publié sur le site de la Cantine: &lt;a class="reference external" href="http://cantine.atlantic2.org/evenements/meetup-python-4/"&gt;Meetup Python #4&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;À bientôt, et en attendant ... respectez la PEP8 :)&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Florent Lebreton</dc:creator><pubDate>Fri, 01 Aug 2014 00:00:00 +0200</pubDate><guid isPermaLink="false">tag:nantes.afpy.org,2014-08-01:fin-des-vacances-nantes-se-replonge-dans-python.html</guid><category>python</category><category>django</category><category>nantes</category></item><item><title>Rencontre et key signing party 24 mai 2014</title><link>http://nantes.afpy.org/rencontre-et-key-signing-party-24-mai-2014.html</link><description>&lt;p&gt;Après le meetup-pilote qui nous a permis de découvrir GrapheekDB, cette rencontre avait pour principal objectif de faire connaissance et préparer les prochains évènements.&lt;/p&gt;
&lt;p&gt;Il en est sortie l'idée d'organiser un meetup par mois en alternant conférences et barcamps.&lt;/p&gt;
&lt;p&gt;Quelques sujets potentiels de présentations ont déjà émergés :&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Initiation à Python ou comment écrire du code pythonesque pour ceux qui viennent d'autres langages&lt;/li&gt;
&lt;li&gt;Retour d'expérience sur migration vers Python3&lt;/li&gt;
&lt;li&gt;Python legacy avec Zope, Grok, etc.&lt;/li&gt;
&lt;li&gt;Demo d'IPython Notebook avec un peu de dataviz&lt;/li&gt;
&lt;li&gt;Programmation un Raspberry PI avec Python&lt;/li&gt;
&lt;li&gt;Présentation/Introduction à Django&lt;/li&gt;
&lt;li&gt;Retour d'expérience sur apps Django et bibliothèques sympas&lt;/li&gt;
&lt;li&gt;Sites et blogs statiques avec Pelican&lt;/li&gt;
&lt;li&gt;Générateurs et co-routines&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;La &lt;a class="reference external" href="http://fr.wikipedia.org/wiki/Key_signing_party"&gt;key signing party&lt;/a&gt; organisée par &lt;a class="reference external" href="https://twitter.com/pabluk"&gt;Pablo&lt;/a&gt; a permis d'animer la suite du meetup, en attendant la bière !&lt;/p&gt;
&lt;img alt="rencontre et key signing party" src="/images/002-1.png" /&gt;
&lt;p&gt;À bientôt, et en attendant ... respectez la PEP8 :)&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Florent Lebreton</dc:creator><pubDate>Thu, 31 Jul 2014 00:00:00 +0200</pubDate><guid isPermaLink="false">tag:nantes.afpy.org,2014-07-31:rencontre-et-key-signing-party-24-mai-2014.html</guid><category>python</category><category>pgp</category></item><item><title>Retour sur le meetup du 09 avril 2014</title><link>http://nantes.afpy.org/retour-sur-le-meetup-du-09-avril-2014.html</link><description>&lt;p&gt;Lors de ce premier meetup Python, où plus d'une vingtaine de personnes étaient présentes, Raphaël Braud nous a présenté &lt;a class="reference external" href="https://bitbucket.org/nidusfr/grapheekdb"&gt;GrapheekDB&lt;/a&gt;, une base de données de graphe libre !&lt;/p&gt;
&lt;p&gt;Ce premier rendez-vous était surtout l'occasion de nous rencontrer et de discuter de l'organisation de nos prochaines rassemblements.&lt;/p&gt;
&lt;p&gt;À bientôt, et en attendant ... respectez la PEP8 :)&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Florent Lebreton</dc:creator><pubDate>Wed, 30 Jul 2014 00:00:00 +0200</pubDate><guid isPermaLink="false">tag:nantes.afpy.org,2014-07-30:retour-sur-le-meetup-du-09-avril-2014.html</guid><category>grapheekdb</category></item></channel></rss>